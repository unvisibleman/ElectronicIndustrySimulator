class TechnologyTree:
    def __init__(self):
        self.research_in_progress = {}
        
        # Добавляем словарь для отслеживания количества продаж каждой технологии
        self.technology_sales = {}
        # Коэффициент ускорения устаревания за каждую продажу
        self.SALES_DEPRECIATION_MULTIPLIER = 0.2  # 20% ускорение устаревания за каждую продажу
        
        # Дерево технологий: {название технологии: (уровень, доступный с года, год освоения)}
        self.technologies = {
            "пассивка": ("начальная", 1918, None),
            "радиолампы": ("начальная", 1918, None),
            "полупроводники": ("начальная", 1947, None),
            "чбэлт": ("начальная", 1949, None),
            "нмл": ("начальная", 1949, None),
            "ис": ("начальная", 1961, None),
            "цветнойэлт": ("начальная", 1967, None),
            "мис": ("начальная", 1970, None),
            "нгмд": ("начальная", 1971, None),
            "сис": ("начальная", 1975, None),
            "бис": ("начальная", 1980, None),
            "нжмд": ("начальная", 1986, None),
            "сбис": ("начальная", 1990, None),
        }
        
        # Добавляем описания технологий
        self.TECH_DESCRIPTIONS = {
            "пассивка": {
                "описание": "Пассивные электронные компоненты - резисторы, конденсаторы, катушки индуктивности",
                "уровни": {
                    "начальная": "Производство простейших компонентов низкой точности",
                    "средняя": "Улучшенная точность и стабильность характеристик",
                    "продвинутая": "Прецизионные компоненты с высокой надежностью"
                }
            },
            "радиолампы": {
                "описание": "Электровакуумные приборы для усиления и генерации электрических сигналов",
                "уровни": {
                    "начальная": "Простые триоды и диоды",
                    "средняя": "Многосеточные лампы, тетроды и пентоды",
                    "продвинутая": "Специальные типы ламп, высокочастотные и мощные приборы"
                }
            },
            "полупроводники": {
                "описание": "Полупроводниковые приборы - диоды, транзисторы",
                "уровни": {
                    "начальная": "Простые германиевые диоды и транзисторы",
                    "средняя": "Кремниевые транзисторы, стабилитроны",
                    "продвинутая": "Мощные транзисторы, тиристоры, специальные приборы"
                }
            },
            "чбэлт": {
                "описание": "Черно-белые электронно-лучевые трубки для телевизоров и мониторов",
                "уровни": {
                    "начальная": "Простые ЭЛТ с низким разрешением",
                    "средняя": "ЭЛТ с улучшенной фокусировкой и яркостью",
                    "продвинутая": "Высококачественные ЭЛТ с высоким разрешением"
                }
            },
            "нмл": {
                "описание": "Накопители на магнитной ленте - устройства хранения данных",
                "уровни": {
                    "начальная": "Простые устройства с низкой плотностью записи",
                    "средняя": "Улучшенные механизмы и повышенная надежность",
                    "продвинутая": "Высокоскоростные НМЛ с высокой плотностью записи"
                }
            },
            "ис": {
                "описание": "Интегральные схемы малой степени интеграции",
                "уровни": {
                    "начальная": "Простые логические элементы",
                    "средняя": "Операционные усилители, счетчики",
                    "продвинутая": "Сложные функциональные блоки"
                }
            },
            "цветнойэлт": {
                "описание": "Цветные электронно-лучевые трубки для телевизоров",
                "уровни": {
                    "начальная": "Базовые цветные ЭЛТ",
                    "средняя": "Улучшенная цветопередача и яркость",
                    "продвинутая": "Высококачественные ЭЛТ с точной цветопередачей"
                }
            },
            "мис": {
                "описание": "Микросхемы средней степени интеграции - до 100 элементов на кристалле",
                "уровни": {
                    "начальная": "Простые функциональные узлы",
                    "средняя": "Сложные логические блоки",
                    "продвинутая": "Процессорные элементы и память"
                }
            },
            "нгмд": {
                "описание": "Накопители на гибких магнитных дисках",
                "уровни": {
                    "начальная": "8-дюймовые дискеты",
                    "средняя": "5.25-дюймовые дискеты",
                    "продвинутая": "3.5-дюймовые дискеты высокой плотности"
                }
            },
            "сис": {
                "описание": "Схемы с высокой степенью интеграции - до 1 000 элементов на кристалле",
                "уровни": {
                    "начальная": "Простые микропроцессоры",
                    "средняя": "Микроконтроллеры",
                    "продвинутая": "Специализированные процессоры"
                }
            },
            "бис": {
                "описание": "Большие интегральные схемы - до 10 000 элементов на кристалле",
                "уровни": {
                    "начальная": "Простые микропроцессоры",
                    "средняя": "Сопроцессоры и контроллеры",
                    "продвинутая": "Мощные процессоры и память"
                }
            },
            "нжмд": {
                "описание": "Накопители на жестких магнитных дисках",
                "уровни": {
                    "начальная": "Диски малой емкости",
                    "средняя": "Улучшенные механизмы и контроллеры",
                    "продвинутая": "Высокоскоростные диски большой емкости"
                }
            },
            "сбис": {
                "описание": "Сверхбольшие интегральные схемы - более 10 000 элементов на кристалле",
                "уровни": {
                    "начальная": "Базовые СБИС",
                    "средняя": "Сложные процессоры",
                    "продвинутая": "Многоядерные процессоры и видеочипы"
                }
            }
        }

        # Длительность исследования технологий, лет
        self.research_time = {
            "пассивка": 0,
            "радиолампы": 0,
            "полупроводники": 1,
            "чбэлт": 1,
            "нмл": 1,
            "ис": 1,
            "цветнойэлт": 1,
            "мис": 1,
            "нгмд": 1,
            "сис": 1,
            "бис": 1,
            "нжмд": 1,
            "сбис": 1,
        }

        # Стоимость исследования технологий, рублей
        self.resources_required = {
            "пассивка": 50,
            "радиолампы": 150,
            "полупроводники": 200,
            "чбэлт": 250,
            "нмл": 300,
            "ис": 400,
            "цветнойэлт": 500,
            "мис": 350,
            "нгмд": 300,
            "сис": 450,
            "бис": 600,
            "нжмд": 700,
            "сбис": 800,
        }

        # Базовые цены для покупки технологии на внешнем рынке, долларов
        self.TECH_PRICES = {
            "пассивка": 500,
            "радиолампы": 1000,
            "полупроводники": 2000,
            "чбэлт": 1500,
            "нмл": 1200,
            "ис": 2500,
            "цветнойэлт": 2000,
            "мис": 3000,
            "нгмд": 1800,
            "сис": 3500,
            "бис": 4000,
            "нжмд": 2500,
            "сбис": 5000
        }

        # Базовые цены для внутреннего рынка производимой элементной базы
        self.PRODUCT_PRICES = {
            "пассивка": 800,        # Массовое производство
            "радиолампы": 1500,     # Сложное производство
            "полупроводники": 2500, # Высокотехнологичное производство
            "чбэлт": 2000,         # Телевизоры и мониторы
            "нмл": 1800,           # Накопители данных
            "ис": 3000,            # Интегральные схемы
            "цветнойэлт": 3500,    # Цветные телевизоры
            "мис": 4000,           # Микросхемы
            "нгмд": 2500,          # Дискеты
            "сис": 5000,           # Сложные схемы
            "бис": 6000,           # Большие схемы
            "нжмд": 4000,          # Жесткие диски
            "сбис": 8000           # Сверхбольшие схемы
        }

    def get_available_technologies(self, current_year):
        """Возвращает список технологий, которые можно освоить в текущем году."""
        available_technologies = []
        for tech, (level, year_available, _) in self.technologies.items():
            if current_year >= year_available:
                status = ""
                if tech in self.research_in_progress:
                    years_spent = self.research_in_progress[tech]
                    years_total = self.research_time[tech]
                    status = f" (исследуется: {years_spent}/{years_total} лет)"
                available_technologies.append(tech + status)
        return available_technologies

    def get_status(self):
        """Возвращает статус освоенных технологий."""
        status = {}
        for tech, (level, year_available, year_learned) in self.technologies.items():
            if year_learned is not None:
                status[tech] = {
                    "уровень": level,
                    "доступен с": year_available,
                    "год освоения": year_learned
                }
            elif tech in self.research_in_progress:
                years_spent = self.research_in_progress[tech]
                years_total = self.research_time[tech]
                status[tech] = {
                    "уровень": "исследуется",
                    "прогресс": f"{years_spent}/{years_total} лет"
                }
        return status

    def research(self, tech_name, available_rubles):
        """Исследование технологии"""
        tech_name = tech_name.lower()
        if tech_name not in self.technologies:
            print("Технология не найдена.")
            return 0

        current_level, year_available, _ = self.technologies[tech_name]
        required_cost = self.resources_required[tech_name]

        if required_cost > available_rubles:
            print(f"Недостаточно рублей для исследования. Доступно: {available_rubles} руб.")
            return 0

        if tech_name not in self.research_in_progress:
            self.research_in_progress[tech_name] = 0
            print(f"Начато исследование {tech_name}. Требуется лет: {self.research_time[tech_name]}")
            return required_cost

        self.research_in_progress[tech_name] += 1
        years_left = self.research_time[tech_name] - self.research_in_progress[tech_name]

        if years_left > 0:
            print(f"Исследование {tech_name} продолжается. Осталось лет: {years_left}")
            return required_cost

        # Исследование завершено
        next_level = "средняя" if current_level == "начальная" else "продвинутая"
        self.technologies[tech_name] = (next_level, year_available, self.current_year)
        del self.research_in_progress[tech_name]
        print(f"{tech_name} улучшена до уровня {next_level}.")
        return required_cost

    def update_current_year(self, year):
        self.current_year = year